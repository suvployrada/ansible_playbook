# - name: Copy SQL files
#    win_copy: 
#      src: "../templates/1.1-sql-latest-version-checked.sql"
#      dest: "C:\\1.1-sql-latest-version-checked.sql"
#    register: db_sql_copyfile_state
#  - name: Task1.1
#    win_command: "sqlcmd -S {{ db_server | default(ansible_hostname, true) }} 
#    -i {{ db_artifact_dest_dir }}\\1.1-sql-latest-version-checked.sql"
#    register: sql_command

- name: 1.1 Ensure Latest SQL Server Service Packs and Hotfixes are Installed
  win_shell: "invoke-sqlcmd -ServerInstance {{ ansible_hostname }} -Query \"SELECT SERVERPROPERTY('ProductVersion') as Version,  SERVERPROPERTY('ProductLevel') as SP_installed\" | Select-Object * -ExcludeProperty ItemArray, Table, RowError, RowState, HasErrors | ConvertTo-Json"
  register: sql_latest_version_checked

- set_fact:
    ids: "{{ sql_latest_version_checked.stdout|from_json}}"
- debug:
        var: ansible_hostname
- debug:
        var: ids
- debug:
        var: ids.Version
- debug:
        var: ids.SP_installed
- name: Check Condition
  set_fact:
    resultCheckVersion: "{{ ids.Version >= '13.0.7016.1' }}"
- debug:
        var: resultCheckVersion
- debug:
        var: ansible_ip_addresses[0]
- name: Modules Write log file
  import_tasks: ../../../../modules/logs.yml
  vars:
    timestamp: "{{ ansible_date_time.iso8601 }}"
    destination_ip: "{{ ansible_ip_addresses[0] }}"
    playbook_type: "{{ PLAYBOOK_NAME }}"
    section_control_hardening: "Secure Boot Settings"
    task_number_control_hardening: "1.1"
    task_control_hardening: "Ensure Latest SQL Server Service Packs and Hotfixes are Installed"
    result_flag: "{{ resultCheckVersion }}"
    remark: ""