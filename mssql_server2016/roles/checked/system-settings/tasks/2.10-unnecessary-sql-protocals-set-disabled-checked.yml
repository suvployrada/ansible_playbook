# - name: Copy SQL files
#    win_copy: 
#      src: "../templates/2.10-unnecessary-sql-protocals-set-disabled-checked.sql"
#      dest: "C:\\2.10-unnecessary-sql-protocals-set-disabled-checked.sql"
#    register: db_sql_copyfile_state
#  - name: Task1
#    win_command: "sqlcmd -S {{ db_server | default(ansible_hostname, true) }} 
#    -i {{ db_artifact_dest_dir }}\\2.10-unnecessary-sql-protocals-set-disabled-checked.sql"
#    register: sql_command

- name: 2.10 Ensure Unnecessary SQL Server Protocols are set to 'Disabled'   
  win_shell: "invoke-sqlcmd -ServerInstance {{ ansible_hostname }} -Query \"\" | Select-Object * -ExcludeProperty ItemArray, Table, RowError, RowState, HasErrors | ConvertTo-Json "
  register: unnecessary_sql_protocals_set_disabled_checked

- set_fact:
    ids: "{{ unnecessary_sql_protocals_set_disabled_checked.stdout|from_json}}"
- debug:
        var: ansible_hostname
- debug:
        var: ids
# - debug:
#         var: ids.value_configured
# - debug:
#         var: ids.SP_installed
# - name: Check Condition
#   set_fact:
#     resultCheck: "{{ ids = 'Disabled' }}"
# - debug:
#         var: resultCheck
- debug:
        var: ansible_ip_addresses[0]
- name: Modules Write log file
  import_tasks: ../../../../modules/logs.yml
  vars:
    timestamp: "{{ ansible_date_time.iso8601 }}"
    destination_ip: "{{ ansible_ip_addresses[0] }}"
    playbook_type: "{{ PLAYBOOK_NAME }}"
    section_control_hardening: "Secure Boot Settings"
    task_number_control_hardening: "2.10"
    task_control_hardening: "Ensure Unnecessary SQL Server Protocols are set to 'Disabled'"
#     result_flag: "{{ resultCheck }}"
    remark: "no check command"