# - name: Copy SQL files
#   win_copy: 
#     src: "../templates/blabla.sql"
#     dest: "C:\\blabla.sql"
#   register: db_sql_copyfile_state
- name: 1.1 Ensure Latest SQL Server Service Packs and Hotfixes are Installed
  # win_shell: "invoke-sqlcmd -username \"{{db_user}}\" -password \"{{db_pass}}\" -Query \"INSERT INTO Addresses (DoorNum,Street,Town,PostCode) VALUES ({{ item.doornum }},'{{ item.street }}','{{ item.town }}''{{ item.postcode }}')\""
  # win_shell: "invoke-sqlcmd -username \"{{db_user}}\" -password \"{{db_pass}}\" -Query \"SELECT ID FROM Addresses WHERE PostCode = '{{ item.postcode }}'\" | Select-Object * -ExcludeProperty ItemArray, Table, RowError, RowState, HasErrors | ConvertTo-Json"
  win_shell: "invoke-sqlcmd -ServerInstance {{ ansible_hostname }} -Query \"SELECT SERVERPROPERTY('ProductVersion') as Version,  SERVERPROPERTY('ProductLevel') as SP_installed\" | Select-Object * -ExcludeProperty ItemArray, Table, RowError, RowState, HasErrors | ConvertTo-Json"
  register: resultSQL
# - name: Task2
#   win_command: "sqlcmd -S {{ db_server | default(ansible_hostname, true) }} -i {{ db_artifact_dest_dir }}\\blabla.sql"
#   register: sql_command2
# - name: Ensure Latest SQL Server Service Packs and Hotfixes are Installed
#   community.general.mssql_script:
#     login_user: "{{ ansible_hostname }}"
#     # login_password: "{{ mssql_login_password }}"
#     # login_host: "{{ mssql_host }}"
#     # login_port: "{{ mssql_port }}"
#     db: master
#     script: "SELECT SERVERPROPERTY('ProductVersion') as Version;"
#   register: dbversion
- set_fact:
    ids: "{{ resultSQL.stdout|from_json}}"
- debug:
        var: ansible_hostname
- debug:
        var: ids
- debug:
        var: ids.Version
- debug:
        var: ids.SP_installed
- name: Check Condition
  set_fact:
    resultCheckVersion: "{{ ids.Version >= '13.0.7016.1' }}"
- debug:
        var: resultCheckVersion
- debug:
        var: ansible_ip_addresses[0]
- name: Modules Write log file
  import_tasks: ../../../../modules/logs.yml
  vars:
    timestamp: "{{ ansible_date_time.iso8601 }}"
    destination_ip: "{{ ansible_ip_addresses[0] }}"
    playbook_type: "{{ PLAYBOOK_NAME }}"
    section_control_hardening: "Secure Boot Settings"
    task_number_control_hardening: "1.1"
    task_control_hardening: "Ensure Latest SQL Server Service Packs and Hotfixes are Installed"
    result_flag: "{{ resultCheckVersion }}"
    remark: ""